services:
    database:
        image: postgres:14
        restart: always
        environment:
            POSTGRES_DB: mydatabase
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -d mydatabase -U user" ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s

    part_2:
        image: meitarasaf/vacations_website:latest
        environment:
            DEBUG: 'False'
            POSTGRES_HOST: database
            POSTGRES_DB: mydatabase
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_PORT: 5432
        command: >
                sh -c "python manage.py migrate && python manage.py loaddata initial_data &&
                gunicorn vacations_project.wsgi:application --bind 0.0.0.0:8080 --workers 1"
        depends_on:
            database:
                condition: service_healthy

    statistics-backend:
        image: meitarasaf/statistics_backend:latest
        environment:
            DEBUG: 'False'
            POSTGRES_HOST: database
            POSTGRES_DB: mydatabase
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_PORT: 5432
        depends_on:
            database:
                condition: service_healthy
        

    statistics-frontend:
        image: meitarasaf/statistics_frontend_and_nginx:latest
        depends_on:
            - statistics-backend

    part_2_nginx_staticfiles:
      image: meitarasaf/vacations_website_nginx_and_static_files:latest
      
      depends_on:
        - part_2

    main_nginx:
      image: meitarasaf/main_nginx:latest
      ports:
        - "80:80"
        - "81:81"
      depends_on:
        - part_2_nginx_staticfiles
        - statistics-frontend